import {PureComponent} from "react"
import ssjs from "ssjs"

import theme from "./helpers/theme.tea"
import classes from "./helpers/classes.tea"
import {bcolorVariant, tappable} from "./helpers/css-color.tea"

import CustomListeners from "./customListeners.tea"

let buttonSheet = ssjs(
    {
        "doric-button": {
            display: "inline-flex"
            padding: "8px 16px"
            borderRadius: 4
            userSelect: "none"
            overflow: "hidden"
            justifyContent: "center"
            alignItems: "center"
            margin: 2
            transition: "background-color 150ms linear"
            "&:hover": {
                cursor: "pointer"
            }
            ...tappable((theme) => theme.highlightColor)
            ...bcolorVariant("primary")
            ...bcolorVariant("secondary")
            ...bcolorVariant("danger")
            ...bcolorVariant("accent")
            "&.block": {
                display: "flex"
            }
            "&.disabled": {
                opacity: 0.4
            }
            "&.snug": {
                padding: 0
            }
            "&.flush": {
                margin: 0
            }
            "&.raised": {
                boxShadow: "2px 2px 3px rgba(0, 0, 0, 0.4)"
            }
        }
    }
    {name: "doric-button"}
)
buttonSheet.generate(theme)

class Button extends PureComponent {
    render() => {
        let {
            text, children, style = {}, tabIndex = 1
            circle
            onTap
            ...rest
        } = @props

        if circle != void {
            style.width = circle
            style.height = circle
            style.padding = 0
            style.borderRadius = "50%"
        }

        let props = {
            style
            tabIndex
            class: classes(rest)
        }
        let tapHandler = (evt) => {
            if rest.disabled != true {
                onTap?(evt)
            }
        }

        return <doric-button {...props}>
            <CustomListeners onTap=tapHandler />
            {text}{children}
        </doric-button>
    }
}

export default Button
